#!/usr/bin/env python

'''
ROS Node: 	autopatrol
Author:   	R. Georgiou
Version:  	1.1
Last modified:	20.05.2016


This implementation uses a SimpleActionClient to connect to an ActionServer.

*** IMPORT ***
AMCL is used for localization and therefore this node assumes, that we are using a map!
Can be an empty map aswell, though.

All relevant information regarding navigation can be found here:
http://wiki.ros.org/navigation

The move_base package provides an implementation of an action (see the actionlib package) that,
given a goal in the world, will attempt to reach it with a mobile base.
The move_base node links together a global and local planner to accomplish its global navigation task.
full description:  http://wiki.ros.org/move_base

tf is a package that lets the user keep track of multiple coordinate frames over time.
A robotic system typically has many coordinate frames, such as a world frame, base frame, 
laserscan frame etc.
With tf we can maintain the relationship between coordinate frames in a tree structure.
'''
from robopatrol.Control.AutonomousPatrol import AutonomousPatrol
import rospy

node = AutonomousPatrol()
try:
    node.startAutopatrol()
    '''
    for i in range(1,11):
        rospy.loginfo("***** test round " + str(i) + " *****")
        node.runAllTests()
        rospy.sleep(3)
    '''
except rospy.ROSInterruptException:
    node.stop()
