<!-- launch file to run robopatrol simulation -->
<launch>

  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_footprint"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="odom" />
  <arg name="laser_topic" default="scan" />
  <arg name="gui" default="true"/>
  <arg name="base" value="$(optenv TURTLEBOT_BASE kobuki)"/>
  <arg name="battery" value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>
  <arg name="stacks" value="$(optenv TURTLEBOT_STACKS hexagons)"/>
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>

  <!-- Localization -->
  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <!-- map / world file-->
  <arg name="map_file" default="$(env TURTLEBOT_GAZEBO_MAP_FILE)" doc="map file for gazebo simulation"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)" doc="world file for gazebo simulation"/>

  <!-- Map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
  
  <!-- run SLAM -->
  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen" required="true">
    <param name="base_frame" value="$(arg base_frame_id)"/>
    <param name="odom_frame" value="$(arg odom_frame_id)"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="5.5"/>
    <param name="maxRange" value="5.5"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <param name="minimumScore" value="50"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="linearUpdate" value="0.2"/>
    <param name="angularUpdate" value="0.25"/>
    <param name="temporalUpdate" value="5"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="80"/>
    <param name="xmin" value="-1.0"/>
    <param name="ymin" value="-1.0"/>
    <param name="xmax" value="1.0"/>
    <param name="ymax" value="1.0"/>
    <param name="delta" value="0.025"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <remap from="scan" to="$(arg laser_topic)"/>
  </node>

  <!-- gazebo simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>

  <!-- shared include -->
  <include file="$(find robopatrol)/launch/includes/simulation.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    <arg name="odom_frame_id" value="$(arg odom_frame_id)" />
    <arg name="base_frame_id" value="$(arg base_frame_id)" />
    <arg name="global_frame_id" value="$(arg global_frame_id)" />
    <arg name="odom_topic" value="$(arg odom_topic)" />
    <arg name="laser_topic" value="$(arg laser_topic)" />
  </include>

  <!--- Run AMCL (Adaptive Monte Carlo Localisation)
        AMCL is responsible for localizing the robot on the map -->
  <include file="$(find turtlebot_navigation)/launch/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)" />
    <arg name="initial_pose_y" value="$(arg initial_pose_y)" />
    <arg name="initial_pose_a" value="$(arg initial_pose_a)" />
  </include>

  <!-- run autonomous patrol
  <node pkg="robopatrol" type="autonomousPatrol" name="autopatrol" output="screen" respawn="false">
  </node> -->
</launch>
